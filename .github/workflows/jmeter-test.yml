name: 'Teste de Performance com JMeter e New Relic'

on:
  workflow_dispatch:

jobs:
  performance-test:
    runs-on: ubuntu-latest

    env:
      API_PROTOCOL: http
      API_HOST: localhost
      API_PORT: 3000
      API_USER: ${{ secrets.API_USER }}
      API_PASS: ${{ secrets.API_PASS }}
      NEWRELIC_API_KEY: ${{ secrets.NEWRELIC_API_KEY }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instala dependências do projeto (Node.js)
        run: |
          npm install

      - name: Instala dependências adicionais para scripts
        run: npm install --prefix scripts dotenv axios csv-parser

      - name: Baixa e extrai o Apache JMeter
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.4.1.tgz
          tar -xzf apache-jmeter-5.4.1.tgz

      - name: Inicia a API mock
        run: nohup node mock-api/server.js > mock-api.log 2>&1 &

      - name: Aguarda a API mock iniciar
        run: sleep 5

      - name: Cria diretório para relatórios
        run: mkdir -p results/dashboard

      - name: Executa testes de performance com JMeter
        run: |
          ./apache-jmeter-5.4.1/bin/jmeter \
            -n \
            -t test-plan/poc_transferencias.jmx \
            -l results/result.jtl \
            -JAPI_PROTOCOL=$API_PROTOCOL \
            -JAPI_HOST=$API_HOST \
            -JAPI_PORT=$API_PORT \
            -JAPI_USER=$API_USER \
            -JAPI_PASS=$API_PASS

      - name: Gera dashboard do JMeter
        run: |
          ./apache-jmeter-5.4.1/bin/jmeter \
            -g results/result.jtl \
            -o results/dashboard

      - name: Envia dados para o New Relic
        run: npm run upload-nr

      - name: Faz upload do dashboard como artefato
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-dashboard
          path: results/dashboard
          if-no-files-found: warn
